 <%@l = -1 %>
      <!-- the table creation is changed top accomodate functionality of tablesorter, which requires thead and tbody seperately. Previously, headers were in tbody only -->
      <div class = 'reviewreport'>
  <!-- Added headers for tablesorter -->

<script type='text/javascript'>
$(window).load(function(){
  $("#myTable tbody").sortable().disableSelection();

  <% sort_reviewer_by_review_volume_desc.each do |r| %>
    td_height = $("#assign_grade" + <%= r.id.to_s %> ).height()
    form_height = $("#assign_grade" + <%= r.id.to_s %> + " form").height()

    if(td_height > form_height){
      difference = td_height - form_height
      new_height = 40 + difference
      $("#assign_grade" + <%= r.id.to_s %> + " form textarea").height(new_height)
    }
  <%end %>
});

function trial()
{
    alert("time spent = 10 mins!")
}


function showHideReviewTime(studentId){

    var id = "myDiv_"+studentId;
   /* alert(id.toString());*/
    /*var show = element.innerHTML == 'Hide all team members'; */
    if (document.getElementById(id).style.display == "none"){
        document.getElementById(id).style.display="block";
    }else{
        document.getElementById(id).style.display = "none";
    }
    //toggleTeamMembersInTeamsListPage();
}

</script>

        <% def get_link_round_review_time(map_id, round, link) %>
            <% sum_time = 0 %>
            <% links = ResponseTime.where(map_id: map_id, round: round, link: link) %>
            <% links.each do |link_time| %>
                <% if link_time.end_at.nil? || link_time.start_at.nil? %>
                    <% individual_time = 0 %>
                <% else %>
                    <% individual_time = (link_time.end_at.to_i - link_time.start_at.to_i)/60.0 %>
                <% end %>
                <% individual_time = individual_time<0? 0: individual_time %>
                <% sum_time = individual_time + sum_time %>
            <% end %>
            <% sum_time %>
        <% end %>

  <table id="myTable" class="table table-striped" width="100%" cellspacing='0' cellpadding='2' border='0' style="font-size: 15px">
    <thead>
    <tr>
  <!-- class value decides whether the column should be sortable or not  -->
      <th width = "16%" class="sorter-true">Reviewer <span></span></th>
      <th width = "10%" class="sorter-false">Reviews done<span></span></th>
      <!--Dr.Kidd's course
      <% if @assignment.instructor_id == 2026 %>
        <th width = "14%" class="sorter-false">Team reviewed <span></span></th>
        <th width = "14%" class="sorter-false">Author feedback <span></span></th>
      <% else %>-->
        <th width = "24%" class="sorter-false">Team reviewed <span></span></th>
      <!--<% end %>-->
      <th width = "13%" class="sorter-false">Score awarded / Avg. score <span></span></th>
      <th width = "13%" class="sorter-true">Metrics <span></span></th>
      <th class="sorter-false">Assign grade and write comments <span></span></th>
    </tr>
    </thead>
<tbody>

      <% sort_reviewer_by_review_volume_desc.each do |r| %>
        <% @response_maps, @bgcolor, @rspan, @l = get_data_for_review_report(@id, r.id, @type, @l) %>
        <tr >
        <%if r.id != -1 %>
          <% user = Participant.find(r.id).user %>
            <!--reviewer-->
            <td>

              <a id="time" onclick="showHideReviewTime(<%= r.id.to_s %>);">Review time spent on task</a><br>
              <%= link_to user.name(session[:ip]), impersonate_impersonate_path(:user => {:name => user.name(session[:ip])}), :method => :post %>
              (<%= user.fullname(session[:ip]) %>)
            </td>
            <!--# reviews done-->
            <td align = 'left'>
              <% (1..@assignment.num_review_rounds).each do |round| %>
                <%= instance_variable_get("@review_in_round_" + round.to_s) %>/<%= @rspan %>
                <%= ', ' unless round == @assignment.num_review_rounds %>
              <% end %>
              <%= link_to "summary", {:controller => 'popup', :action => 'view_review_scores_popup', :reviewer_id => r.id, :assignment_id=>@id}, target: :_blank %>
            </td>
          <!--Team reviewed / Author feedback-->
          <td align = 'left'>
          <% @response_maps.each_with_index do |ri, index| %>
            <!--For assignments with team member 1, team reviewed column should show username instead of team name, which is randomly generated.-->
            <% team_name_color = get_team_name_color_in_review_report(ri) %>
            <% team_reviewed_link_name = get_team_reviewed_link_name(@assignment.max_team_size, ri.response, ri.reviewee_id) %>
              <% if Team.where(id: ri.reviewee_id).length > 0 %>
                <!--Team reviewed-->

                  <div id = <%= team_name_color %>>
                    <%= link_to team_reviewed_link_name, :controller => 'popup', :action => 'team_users_popup', :id => ri.reviewee_id, :id2 => ri.id, :assignment_id=>@id %>
                    <%= list_review_submissions(r.id, ri.reviewee_id, ri.id) %>
                    <!--Hard-coded Dr.Kidd's question in order to display link.-->
                    <!--later we can create a hyperlink question type to deal with this situation.-->
                    <%= list_hyperlink_submission(ri.id, 5386) if Assignment.find_by(id: @id.to_i).course.instructor.name == 'Jkidd' %>
                  </div>

                <!--Author feedback-->
                <!--Dr.Kidd required to add a "autor feedback" column that shows the average score the reviewers received from the authors. In this case, she can see all the data on a single screen.-->
                <!--Dr.Kidd's course-->
                <!--<% if @assignment.instructor_id == 2026 %>
                  <% if index == 0 %>
                  <div>
                  <% else %>
                  <div style="border-top: solid; border-width: 1px;">
                  <% end %>
                    <%= calcutate_average_author_feedback_score(@assignment.id, @assignment.max_team_size, ri.id, ri.reviewee_id) %>
                  </div>
                <% end %>-->
              <%end%>
          <%end %>
          </td>
          <!--Score awarded / Avg. score-->
          <td align = 'left' >
          <% @response_maps.each_with_index do |ri, index| %>
            <% if Team.where(id: ri.reviewee_id).length > 0 %>
                <%@team = Team.find(ri.reviewee_id) %>
                <%= render partial: 'team_score',  locals: {bgcolor: @bgcolor, team_id: @team.id, reviewer_id: r.id} %>
            <%end %>
          <%end %>
          </td>
          <!--Metrics-->
          <td align = 'left'>
            <%= display_volume_metric(r.overall_avg_vol, r.avg_vol_in_round_1, r.avg_vol_in_round_2, r.avg_vol_in_round_3) %>
            <p>
            <%= link_to "tone analysis chart", {:controller => 'popup', :action => 'tone_analysis_chart_popup', :reviewer_id => r.id, :assignment_id=>@id}, target: :_blank %>
            </p>
          </td>
          <!--Assign grade and write comments-->
          <td align = 'left' style="" id=<%= "assign_grade" + r.id.to_s %>>
            <%= form_tag 'save_grade_and_comment_for_reviewer', :style => "height:100%; width:100%; position:relative;", remote: true do%>
              <%= hidden_field_tag :participant_id, r.id %>
              <%= hidden_field_tag :assignment_id, @id %>
              <%= number_field_tag 'grade_for_reviewer', r.review_grade.try(:grade_for_reviewer) ,min: 0, max: 100, maxlength: 3, size: 3, placeholder: 'Grade', :class => "form-control", :style => "width: 100px;"%>
              <%= text_area_tag 'comment_for_reviewer', r.review_grade.try(:comment_for_reviewer), placeholder: 'Comment', class: "form-control", 'data-multiple' => '',  'data-minchars' => "1", :style => "width: 100%;"  %>
                <table class="" style="width: 100%">
                  <tbody width="100%">
                    <tr>
                      <td>
                        <%= image_tag 'text_macro.png', :border => 2, :title => 'Text Macro/Pastebin', :style => 'width: 24px; height:30px', :onclick => 'show_text_macros()'%>
                      </td>
                      <td style="text-align: right">
                        <%= submit_tag 'Save', :class => "btn btn-sm btn-default" %>
                      </td>
                    </tr>
                  </tbody>
                </table>
            <% end %>
          </td>
              <td style="display:none;" id="myDiv_<%= r.id.to_s %>">

                <div id="responsetime">
                  <% reviewee_list = Array.new %>
                  <% total_time_list = Array.new %>
                  <% timeHash = Hash.new %>

                  <h3> Response time details</h3>
                  <div>
                    <table>
                      <tr>
                        <th align="right">Reviewee id </th>
                        <th align="right">Total Time (mins)</th>
                        <th align="right">Round </th>
                        <th align="right">Links</th>
                        <th align="right">Time per link (mins)</th>
                        <th></th>
                      </tr>

                      <% @reviewers = Participant.where(user_id:user.id) %>
                      <!%= "user is:"+user.id.to_s%>
                      <% @reviewers.each do |reviewer| %> <!-- for reviewer-->
                          <!%="Reviewer id is : "+reviewer.id.to_s %>
                          <% @response_maps = ResponseMap.where(reviewer_id: reviewer.id, reviewed_object_id: @id)  %>
                          <% @number_of_rounds = Assignment.find(@id).rounds_of_reviews %>
                          <!%= "no. of rounds: "+ @number_of_rounds.to_s %>
                          <% reviewee_count = 0 %>
                          <% @response_maps.each do |map| %>  <!-- for reviewee-->
                              <!%= "map id: "+map.id.to_s %>
                              <% map_total_time = 0 %>
                              <% (1..@number_of_rounds).each do |each_round| %>  <!-- for rounds-->
                                  <% @per_round_time = Array.new %>
                                  <% @responsetime_match = ResponseTime.where(map_id: map.id, round:each_round)%>
                                  <% @reviewed_object_id = map.reviewed_object_id %>
                                  <% @reviewee_id = map.reviewee_id %>

                                  <% link_list = Array.new %>
                                  <% @count = 0 %>   <!--- To print revieweeId only once-->
                                  <% @dummy = "      " %>    <!---Empty string as a placeholder-->
                                  <% @responsetime_match.each do |responsetime_entry| %>
                                      <% if link_list.include?(responsetime_entry.link) %><!-- only unique links per round-->
                                      <% else %>
                                          <% link_list.push(responsetime_entry.link) %>
                                          <tr>
                                            <% if @count == 0 %>  <!--- print revieweeId,time, round only for the first row-->
                                                <td><%= Team.where(id:@reviewee_id).first.name.to_s %></td>
                                                <td id="<%= reviewee_count.to_s %>"></td>
                                                <td><%= responsetime_entry.round %></td>
                                            <% else %>        <!--- Else print dummy-->
                                                <td><%= @dummy %></td>
                                                <td><%= @dummy %></td>
                                                <td><%= " "%></td>
                                            <%end%>
                                            <td><%= responsetime_entry.link %></td>
                                            <% individual_link_time = get_link_round_review_time(responsetime_entry.map_id,responsetime_entry.round,responsetime_entry.link) %>
                                            <% map_total_time = map_total_time + individual_link_time %>
                                            <% each_link_detail = Array.new %>
                                            <% each_link_detail << responsetime_entry.link %>
                                            <% each_link_detail << individual_link_time %>
                                            <% @per_round_time << each_link_detail %>
                                            <td align="center"><%= sprintf("%.2f",individual_link_time) %></td>
                                          </tr>
                                      <% end %>
                                      <% @count=@count+1 %>
                                  <%end %>   <!-- end for link-->
                                  <% timeHash[(@reviewee_id.to_s).concat(each_round.to_s)] = @per_round_time %>
                              <% end%>    <!-- end for round-->
                              <% reviewee_list << @reviewee_id %>
                              <% total_time_list << map_total_time.round(2) %>
                              <% reviewee_count = reviewee_count+1%>
                          <% end %>  <!-- end for reviewee-->
                      <% end %>  <!-- end for reviewer-->
                      <!--- Script to update the total time column after the page load-->
                      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/canvasjs/1.7.0/canvasjs.js"> </script>     <!-- Canvas JS CDN -->
                      <script type="text/javascript">
                          var timeReportHash;
                          var showDetailsEnabled = false;
                          $(document).ready(function () {
                              console.log("i'm working");
                              timeReportHash = <%= timeHash.to_json.to_s.html_safe %>;
                              totalTimeList = <%= total_time_list%>
                              for(each=0;each<totalTimeList.length;each++){
                                  // var eachId = each.toString();
                                  if(document.getElementById(each.toString())!=null && totalTimeList[each]!=null)
                                      document.getElementById(each.toString()).innerHTML = totalTimeList[each];
                                  console.log("id:"+each+"totalTime:"+totalTimeList[each]);
                                  // $("#responsetime table #"+each).html(totalTimeList[each]);
                              }
                          });
                      </script>
                    </table>
                  </div>
                </div>
              </td>
        <%end %>
      <%end %>
</table>

  <p> **In "Team reviewed" column, text in <i style = "color:red">red</i> indicates that the review is not yet completed; text in <i style = "color:blue">blue</i> indicates that the review grade is not assigned or updated; text in <i style = "color: #986633">brown</i> indicates that the review grade has been assigned.</p>
</div>
  <!--Partial for text macro form-->
 <%= render :partial => '/user_pastebins/save_text_macros'%>


<script>
$(function () {
  /*Function for sorting the table */
		 $("#myTable").tablesorter({
		sortList: [[0,0]], //sort First Column by default when page loads
		headers: {
     		   4: {
      			  sorter: 'customParser' //custom Parser to parse Metrics data for the custom parser
     		      }
   		 }
		});
	});


$.tablesorter.addParser({
  id: "customParser",                                       //customParser for sorting by volume
  is: function (stringValue) {
    return false;
  },
  format: function (stringValue) {
    var stringNumericPart = stringValue.split(" ");         //split the data by spaces
    var numericValue = parseInt(stringNumericPart[2],10);   //extract the numeric data
    return numericValue ;
  },
  type: 'numeric'
});
</script>


